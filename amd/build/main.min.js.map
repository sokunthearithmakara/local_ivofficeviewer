{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Office viewer module\n *\n * @module     local_ivofficeviewer/main\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport Iframe from 'ivplugin_iframe/main';\nexport default class OfficeViewer extends Iframe {\n    /**\n     * Renders the container for the given annotation.\n     *\n     * @param {Object} annotation - The annotation object.\n     * @param {string} annotation.id - The ID of the annotation.\n     */\n    renderContainer(annotation) {\n        let $message = $(`#message[data-id='${annotation.id}']`);\n        $message.addClass(\"hasiframe\");\n        super.renderContainer(annotation);\n    }\n    /**\n     * Runs the interaction for the given annotation.\n     *\n     * @param {Object} annotation - The annotation object containing interaction details.\n     * @param {number} annotation.id - The unique identifier for the annotation.\n     * @param {boolean} annotation.completed - Indicates if the annotation has been completed.\n     * @param {number} annotation.hascompletion - Indicates if the annotation has completion tracking.\n     * @param {string} annotation.completiontracking - The type of completion tracking for the annotation.\n     * @param {string} annotation.displayoptions - The display options for the annotation.\n     *\n     * @returns {Promise<void>} - A promise that resolves when the interaction is complete.\n     */\n    async runInteraction(annotation) {\n        await this.player.pause();\n\n        // Check if device is online.\n        if (!navigator.onLine) {\n            this.addNotification('You need to be online to view this content.');\n            this.player.play();\n            return;\n        }\n\n        let self = this;\n\n        // Apply content.\n        const applyContent = async(annotation) => {\n            const data = await this.render(annotation, 'html');\n            $(`#message[data-id='${annotation.id}'] .modal-body`).attr('id', 'content').html(data).fadeIn(300);\n            if (annotation.hascompletion == 0 || annotation.completed) {\n                this.postContentRender(annotation);\n                return;\n            }\n            if (annotation.completiontracking == 'view') {\n                this.postContentRender(annotation);\n                this.toggleCompletion(annotation.id, \"mark-done\", \"automatic\");\n                return;\n            }\n        };\n\n        await this.renderViewer(annotation);\n        this.renderContainer(annotation);\n        applyContent(annotation);\n\n        if (annotation.displayoptions == 'popup') {\n            $('#annotation-modal').on('shown.bs.modal', function() {\n                self.setModalDraggable('#annotation-modal .modal-dialog');\n            });\n        }\n\n        if (annotation.completiontracking == 'manual') {\n            this.enableManualCompletion(annotation);\n        }\n    }\n}"],"names":["OfficeViewer","Iframe","renderContainer","annotation","id","addClass","this","player","pause","navigator","onLine","addNotification","play","self","renderViewer","async","data","render","attr","html","fadeIn","hascompletion","completed","completiontracking","postContentRender","toggleCompletion","applyContent","displayoptions","on","setModalDraggable","enableManualCompletion"],"mappings":";;;;;;;uKAyBqBA,qBAAqBC,cAOtCC,gBAAgBC,aACG,+CAAuBA,WAAWC,UACxCC,SAAS,mBACZH,gBAAgBC,iCAcLA,qBACXG,KAAKC,OAAOC,SAGbC,UAAUC,mBACNC,gBAAgB,yDAChBJ,OAAOK,WAIZC,KAAOP,WAiBLA,KAAKQ,aAAaX,iBACnBD,gBAAgBC,YAfAY,OAAAA,mBACXC,WAAaV,KAAKW,OAAOd,WAAY,2DACpBA,WAAWC,sBAAoBc,KAAK,KAAM,WAAWC,KAAKH,MAAMI,OAAO,KAC9D,GAA5BjB,WAAWkB,gBAAsBlB,WAAWmB,gBAIX,QAAjCnB,WAAWoB,yBACNC,kBAAkBrB,sBAClBsB,iBAAiBtB,WAAWC,GAAI,YAAa,0BAL7CoB,kBAAkBrB,aAY/BuB,CAAavB,YAEoB,SAA7BA,WAAWwB,oCACT,qBAAqBC,GAAG,kBAAkB,WACxCf,KAAKgB,kBAAkB,sCAIM,UAAjC1B,WAAWoB,yBACNO,uBAAuB3B"}